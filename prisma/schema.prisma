generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}
// Enums
enum EnumSource {
  GOOGLE
  GITHUB
}

model Post {
  id        Int    @id @default(autoincrement())
  slug      String @unique
  viewCount Int    @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  upVotes   Int @default(0)
  downVotes Int @default(0)

  // Relations
  comments Comment[]
}

model User {
  id     Int        @id @default(autoincrement())
  email  String
  source EnumSource @default(GOOGLE)
  name   String
  image String? @map("avatar")

  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  // Relations
  comments   Comment[]
  signatures Guestbook[]

  @@unique([email, source])
}

model Comment {
  id       Int    @id @default(autoincrement())
  content  String
  postId   Int
  userId   Int
  parentId Int?

  upVotes   Int @default(0)
  downVotes Int @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  // Relations
  post     Post      @relation(fields: [postId], references: [id])
  user     User      @relation(fields: [userId], references: [id])
  parent   Comment?  @relation("CommentToComment", fields: [parentId], references: [id])
  children Comment[] @relation("CommentToComment")
}

model Guestbook {
  id      Int    @id @default(autoincrement())
  content String
  userId  Int

  upVotes   Int @default(0)
  downVotes Int @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  // Relations
  user User @relation(fields: [userId], references: [id])
}
