generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL_DEV")
  relationMode = "prisma"
}

model User {
  email         String      @id @db.VarChar(128)
  name          String      @db.VarChar(128)
  avatar        String      @db.Text
  registered_at DateTime    @default(now()) @db.DateTime(6)
  signs         Guestbook[]
  comments      Comment[]
  responses     Reply[]
}

model Guestbook {
  id         BigInt   @id @default(autoincrement())
  authorId   String
  body       String   @db.VarChar(256)
  created_at DateTime @default(now()) @db.DateTime(6)
  updated_at DateTime @default(now()) @db.DateTime(6)
  author     User     @relation(fields: [authorId], references: [email])

  @@index([authorId])
}

model View {
  slug  String @id @db.VarChar(128)
  count BigInt @default(1)

  @@map("Views")
}

model Comment {
  id         BigInt   @id @default(autoincrement())
  post       String   @db.VarChar(128)
  authorId   String
  body       String   @db.VarChar(512)
  created_at DateTime @default(now()) @db.DateTime(6)
  updated_at DateTime @default(now()) @db.DateTime(6)
  author     User     @relation(fields: [authorId], references: [email])
  replies    Reply[]

  @@index([authorId])
}

model Reply {
  id         BigInt   @id @default(autoincrement())
  commentId  BigInt
  authorId   String
  body       String   @db.VarChar(512)
  created_at DateTime @default(now()) @db.DateTime(6)
  updated_at DateTime @default(now()) @db.DateTime(6)
  comment    Comment  @relation(fields: [commentId], references: [id], onDelete: Cascade)
  author     User     @relation(fields: [authorId], references: [email])

  @@index([commentId])
  @@index([authorId])
  @@map("Response")
}
